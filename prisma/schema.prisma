// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")

}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  createdAt       DateTime          @default(now())
  clerkid         String            @unique
  sentTranscripts SentTranscript[]
  subscriptions   Subscription[]
  newsletterFrequency String @default("daily")
  weeklyNewsletterDays Int[]
}

model Channel {
  id            Int            @id @default(autoincrement())
  channelId     String         @unique
  createdAt     DateTime       @default(now())
  videos        Video[]
  subscriptions Subscription[]
}

model Video {
  id              Int               @id @default(autoincrement())
  videoId         String            @unique
  channel         Channel           @relation(fields: [channelId], references: [id])
  channelId       Int
  processedAt     DateTime          @default(now())
  sentTranscripts SentTranscript[]
}

model SentTranscript {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  video     Video    @relation(fields: [videoId], references: [id])
  videoId   Int
  sentAt    DateTime @default(now())

  @@unique([userId, videoId])
}

model Subscription {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId Int
  createdAt DateTime @default(now())

  @@unique([userId, channelId])
}